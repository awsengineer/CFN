{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "VPCID": {
      "Description": "VPC ID:",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PublicSubnetA": {
      "Description": "PublicSubnetA:",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnetB": {
      "Description": "PublicSubnetB:",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnetA": {
      "Description": "PrivateSubnetA:",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnetB": {
      "Description": "PrivateSubnetB:",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "KeyPairName": {
      "Description": "Key pair?",
      "Type": "String"
    },
    "LinuxBastionSecurityGroup": {
      "Description": "LinuxBastionSecurityGroup?",
      "Type": "String"
    },
    "RDSSecurityGroup": {
      "Description": "RDSSecurityGroup?",
      "Type": "String"
    },
    "HTTPInstanceType": {
      "Description": "HTTPInstanceType?",
      "Type": "String"
    },
    "HTTPImageID": {
      "Description": "HTTP Server EC2 ImageID?",
      "Type": "String"
    }
  },
  "Resources": {
    "PrivateSecurityGroupBehindELB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allows SSH (for management), HTTP (for ELB) and MySQL (to access RDS)",
        "VpcId": {
          "Ref": "VPCID"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": {
              "Ref": "LinuxBastionSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "SourceSecurityGroupId": {
              "Ref": "WebELBSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Ref": "RDSSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Createdby",
            "Value": "Mehdi"
          },
          {
            "Key": "Name",
            "Value": "PrivateSecurityGroupBehindELB"
          }
        ]
      }
    },
    "LaunchConfig1": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "InstanceType": {
          "Ref": "HTTPInstanceType"
        },
        "AssociatePublicIpAddress": "false",
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "SecurityGroups": [
          {
            "Ref": "PrivateSecurityGroupBehindELB"
          }
        ],
        "ImageId": {
          "Ref": "HTTPImageID"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum install wget -y\n",
                "wget https://raw.githubusercontent.com/awsengineer/MyTED/master/mycloudinit.sh -O /tmp/mycloudinit.sh\n",
                "chmod +x /tmp/mycloudinit.sh\n",
                "/tmp/mycloudinit.sh\n",
                "/opt/aws/bin/cfn-signal -e 0 --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource WebELB ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup1": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PrivateSubnetA"
          },
          {
            "Ref": "PrivateSubnetB"
          }
        ],
        "MaxSize": "4",
        "DesiredCapacity": "2",
        "MinSize": "1",
        "HealthCheckGracePeriod": "120",
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig1"
        },
        "Tags": [
          {
            "Key": "Createdby",
            "Value": "Mehdi",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Name",
            "Value": "AutoScalingGroup1",
            "PropagateAtLaunch": "true"
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "WebELB"
          }
        ]
      },
      "DependsOn": [
        "WebELB"
      ]
    },
    "WebELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "PublicSubnetA"
          },
          {
            "Ref": "PublicSubnetB"
          }
        ],
        "LoadBalancerName": "WebELB",
        "CrossZone": "true",
        "Scheme": "internet-facing",
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "Protocol": "tcp"
          }
        ],
        "HealthCheck": {
          "Target": "tcp:80",
          "HealthyThreshold": "10",
          "UnhealthyThreshold": "8",
          "Interval": "30",
          "Timeout": "5"
        },
        "SecurityGroups": [
          {
            "Ref": "WebELBSecurityGroup"
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT10M"
        }
      },
      "DependsOn": [
        "WebELBSecurityGroup"
      ]
    },
    "WebELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allows HTTP",
        "VpcId": {
          "Ref": "VPCID"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Createdby",
            "Value": "Mehdi"
          },
          {
            "Key": "Name",
            "Value": "WebELBSecurityGroup"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ELBAddress": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::GetAtt": [
                "WebELB",
                "DNSName"
              ]
            },
            "/cgi-bin/ted"
          ]
        ]
      },
      "Description": "ELB public endpoint."
    }
  }
}
